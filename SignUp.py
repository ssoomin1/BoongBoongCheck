# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SignUp.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import datetime
import sys

import random
import smtplib
from email.mime.text import MIMEText

import pymysql
from PyQt5 import QtCore, QtGui
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QLabel, QLineEdit, QComboBox, QMessageBox

from check import checkId_D,check_driveNum
from result import resultWindow

a = random.randint(0, 9)
b = random.randint(0, 9)
c = random.randint(0, 9)
d = random.randint(0, 9)
e = random.randint(0, 9)
f = random.randint(0, 9)
injung = str(a) + str(b) + str(c) + str(d) + str(e)+str(f)

class signWindow(QWidget):
    def __init__(self,parent):
        super().__init__()
        self.initUI()
        self.parent=parent

    def initUI(self):
        self.setFixedSize(500,690)
        self.setWindowTitle("회원가입")

        self.setFont(QtGui.QFont("나눔스퀘어",10))

        self.titleL = QLabel("회원가입", self)
        self.titleL.setGeometry(175, 20, 161, 31)
        self.titleL.setFont(QtGui.QFont("나눔스퀘어", 18))
        self.titleL.setAlignment(QtCore.Qt.AlignCenter)

        self.idL = QLabel("아이디 (*중복확인 필수)", self)
        self.idL.setGeometry(30, 75, 190, 20)
        self.idL.setAlignment(QtCore.Qt.AlignCenter)

        self.inputID = QLineEdit(self)
        self.inputID.setGeometry(40, 100, 211, 31)

        self.checkID = QPushButton("중복확인", self)
        self.checkID.setGeometry(270, 100, 81, 31)
        self.checkID.clicked.connect(self.confirmID)

        self.passWordL = QLabel("비밀번호", self)
        self.passWordL.setGeometry(40, 144, 64, 21)
        self.passWordL.setAlignment(QtCore.Qt.AlignCenter)

        self.inputPass = QLineEdit(self)
        self.inputPass.setGeometry(40, 170, 211, 31)
        self.inputPass.setEchoMode(QLineEdit.Password)

        self.passCkL = QLabel("비밀번호 확인", self)
        self.passCkL.setGeometry(30, 215, 111, 21)
        self.passCkL.setAlignment(QtCore.Qt.AlignCenter)

        self.passCk_input = QLineEdit(self)
        self.passCk_input.setGeometry(40, 240, 211, 31)
        self.passCk_input.setEchoMode(QLineEdit.Password)
        # self.passCk_input.editingFinished.connect(self.checkPW)  둘 중 더 좋은 것으로 바꾸기
        self.passCk_input.textChanged.connect(self.checkPW)
        self.warningPw = QLabel("", self)
        self.warningPw.setGeometry(45, 276, 211, 16)

        self.nameL = QLabel("이름", self)
        self.nameL.setGeometry(20, 300, 64, 20)
        self.nameL.setAlignment(QtCore.Qt.AlignCenter)

        self.inputName = QLineEdit(self)
        self.inputName.setPlaceholderText("홍길동")
        self.inputName.setGeometry(40, 320, 211, 31)

        self.emailL = QLabel("이메일", self)
        self.emailL.setGeometry(40, 360, 64, 20)

        self.inputEmail = QLineEdit(self)
        self.inputEmail.setGeometry(40, 390, 120, 31)

        self.goalbang = QLabel("@", self)
        self.goalbang.setGeometry(168, 390, 20, 31)

        self.inputEmail2 = QComboBox(self)
        self.inputEmail2.addItem("----")
        self.inputEmail2.addItem("e-mirim.hs.kr")
        self.inputEmail2.addItem("naver.com")
        self.inputEmail2.addItem("hanmail.net")
        self.inputEmail2.addItem("gmail.com")
        self.inputEmail2.addItem("kakao.com")
        self.inputEmail2.addItem("직접 입력")
        self.inputEmail2.setGeometry(189, 390, 130, 31)
        self.inputEmail2.currentIndexChanged.connect(self.getEmail)

        self.myEmail = QLineEdit(self)
        self.myEmail.setPlaceholderText("직접입력")
        self.myEmail.setAlignment(QtCore.Qt.AlignCenter)
        self.myEmail.setReadOnly(True)
        self.myEmail.setGeometry(320,390,110,31)

        self.confirmEmailBtn = QPushButton("인증", self)
        self.confirmEmailBtn.setGeometry(440, 390, 51, 31)
        self.confirmEmailBtn.clicked.connect(self.sendEmail)

        self.birthL = QLabel("생년월일", self)
        self.birthL.setGeometry(QtCore.QRect(40, 440, 64, 21))

        self.inputBirth = QLineEdit(self)
        self.inputBirth.setGeometry(40, 470, 211, 31)
        self.inputBirth.setPlaceholderText("19990101")

        self.driverL = QLabel("운전면허번호", self)
        self.driverL.setGeometry(40, 520, 91, 21)

        self.inputDriverN1 = QComboBox(self)
        self.inputDriverN1.addItem("서울")
        self.inputDriverN1.addItem("부산")
        self.inputDriverN1.addItem("경기")
        self.inputDriverN1.addItem("강원")
        self.inputDriverN1.addItem("충북")
        self.inputDriverN1.addItem("충남")
        self.inputDriverN1.addItem("전북")
        self.inputDriverN1.addItem("전남")
        self.inputDriverN1.addItem("경북")
        self.inputDriverN1.addItem("경남")
        self.inputDriverN1.addItem("제주")
        self.inputDriverN1.addItem("대구")
        self.inputDriverN1.addItem("인천")
        self.inputDriverN1.addItem("대전")
        self.inputDriverN1.addItem("울산")
        self.inputDriverN1.setGeometry(40, 550, 80, 31)
        self.inputDriverN1.currentIndexChanged.connect(self.selectN1)

        self.dash1 = QLabel("-",self)
        self.dash1.move(122,557)

        self.inputDriverN2 = QLineEdit(self)
        self.inputDriverN2.setPlaceholderText("17")
        self.inputDriverN2.setGeometry(130, 550, 80, 31)

        self.dash2 = QLabel("-", self)
        self.dash2.move(212, 557)

        self.inputDriverN3 = QLineEdit(self)
        self.inputDriverN3.setPlaceholderText("174133")
        self.inputDriverN3.setGeometry(220, 550, 80, 31)

        self.dash3 = QLabel("-", self)
        self.dash3.move(302, 557)

        self.inputDriverN4 = QLineEdit(self)
        self.inputDriverN4.setPlaceholderText("01")
        self.inputDriverN4.setGeometry(310, 550, 80, 31)

        self.confirmBtn = QPushButton("인증하기", self)
        self.confirmBtn.setGeometry(400, 550, 81, 31)
        self.confirmBtn.clicked.connect(self.clickConfirmBtn)

        self.OkButton = QPushButton("확인", self)
        self.OkButton.setGeometry(150, 630, 93, 30)
        self.OkButton.clicked.connect(self.insertInfo)
        self.OkButton.setFlat(True)

        self.cancelButton = QPushButton("취소", self)
        self.cancelButton.setGeometry(250, 630, 93, 30)
        self.cancelButton.clicked.connect(self.goLogin1)
        self.cancelButton.setFlat(True)

    # 아이디 중복확인
    def confirmID(self):
        self.checkD = checkId_D(self)
        my_db = pymysql.connect(user="bb", passwd="1201", host="127.0.0.1", db="boongboong")
        cursor = my_db.cursor()
        select_sql = "select * from user where userid=%s"
        cursor.execute(select_sql, (self.inputID.text().strip()))
        result = cursor.fetchall()
        if not self.inputID.text()=="":
            if not result:
                self.checkD.resultL.setText("사용 가능한 아이디입니다.")
                self.checkD.show()
            else:
                self.checkD.resultL.setText("중복된 아이디가 있습니다.")
                self.checkD.show()
        else:
            self.checkD.resultL.setText("아이디를 입력하세요.")
            self.checkD.show()


    # 비밀번호 중복확인
    def checkPW(self):
        if self.inputPass.text() == self.passCk_input.text():
            self.warningPw.setFont(QtGui.QFont("나눔스퀘어",8))
            self.warningPw.setStyleSheet("Color:green")
            self.warningPw.setText("비밀번호가 일치합니다.")
        else:
            self.warningPw.setFont(QtGui.QFont("나눔스퀘어", 8))
            self.warningPw.setText("비밀번호가 일치하지 않습니다.")
            self.warningPw.setStyleSheet("Color:red")


    # 이메일 입력
    def getEmail(self):
        my_email = self.inputEmail2.currentText()
        if my_email == "직접 입력":
            self.myEmail.setText("")
            self.myEmail.setReadOnly(False)
        elif my_email == "e-mirim.hs.kr":
            self.myEmail.setText("e-mirim.hs.kr")
            self.myEmail.setReadOnly(True)
        elif my_email == "naver.com":
            self.myEmail.setText("naver.com")
            self.myEmail.setReadOnly(True)
        elif my_email == "hanmail.net":
            self.myEmail.setText("hanmail.net")
            self.myEmail.setReadOnly(True)
        elif my_email == "gmail.com":
            self.myEmail.setText("gmail.com")
            self.myEmail.setReadOnly(True)
        elif my_email == "kakao.com":
            self.myEmail.setText("kakao.com")
            self.myEmail.setReadOnly(True)


    #이메일 인증
    def sendEmail(self):
        if self.inputEmail.text()=="" or self.myEmail.text()=="":
            msg = QMessageBox()
            msg.setFont(QtGui.QFont("나눔스퀘어", 10))
            msg.setWindowTitle("상태!")
            msg.setText("이메일을 입력하세요")
            msg.setIcon(QMessageBox.Warning)
            msg.setStandardButtons(QMessageBox.Ok)
            x = msg.exec_()
        else:
            self.email = self.inputEmail.text().strip() + "@" + self.myEmail.text().strip()
            s = smtplib.SMTP('smtp.gmail.com', 587)
            s.starttls()
            s.login('sonjiu00@gmail.com', 'wqutybgnhwdreglk')
            msg = MIMEText(str(injung))
            msg['Subject'] = '이메일 인증코드'
            s.sendmail("sonjiu00@gmail.com", self.email, msg.as_string())
            s.quit()

            # 이메일 인증 폼
            self.checkForm = QWidget()
            self.checkForm.setFont(QtGui.QFont("나눔스퀘어"))
            self.checkForm.resize(353, 174)
            self.inputNumL = QLabel("인증번호를 입력하세요: ", self.checkForm)
            self.inputNumL.setFont(QtGui.QFont("나눔스퀘어", 12))
            self.inputNumL.setAlignment(QtCore.Qt.AlignCenter)
            self.inputNumL.setGeometry(60, 20, 231, 41)

            # 이메일 인증번호
            self.emailNum = QLineEdit(self.checkForm)
            self.emailNum.setGeometry(50, 70, 251, 41)
            self.emailNum.setFont(QtGui.QFont("나눔스퀘어",11))

            self.okayBtn = QPushButton("확인", self.checkForm)
            self.okayBtn.setGeometry(130, 130, 91, 31)
            self.okayBtn.setFont(QtGui.QFont("나눔스퀘어", 11))
            self.okayBtn.clicked.connect(self.FindPass)

            self.checkForm.show()

    # 인증번호가 일치하는지 계산
    def FindPass(self):
        accNum = self.emailNum.text().strip()
        if accNum == injung:
             print("인증번호 일치")
             self.messageBox("성공","인증되었습니다.")
        else:
            print("인증번호 불일치")
            self.messageBox("실패","인증번호가 다릅니다.")

    #이메일 인증 결과 메시지 창
    def messageBox(self,title,message):
        self.mess = message
        msg= QMessageBox()
        msg.setFont(QtGui.QFont("나눔스퀘어",10))
        msg.setWindowTitle(title)
        msg.setText(self.mess)
        if title == "성공":
            msg.setIcon(QMessageBox.Information)
            self.checkForm.close()

        elif title == "실패":
            msg.setIcon(QMessageBox.Warning)

        msg.setStandardButtons(QMessageBox.Ok)
        x=msg.exec_()



    #면허번호 첫번째 값 구하기
    def selectN1(self):
        if self.inputDriverN1.currentText() == "서울":
            return "11"
        elif self.inputDriverN1.currentText() == "부산":
            return "12"
        elif self.inputDriverN1.currentText() == "경기":
            return "13"
        elif self.inputDriverN1.currentText() == "강원":
            return "14"
        elif self.inputDriverN1.currentText() == "충북":
            return "15"
        elif self.inputDriverN1.currentText() == "충남":
            return "16"
        elif self.inputDriverN1.currentText() == "전북":
            return "17"
        elif self.inputDriverN1.currentText() == "전남":
            return "18"
        elif self.inputDriverN1.currentText() == "경북":
            return "19"
        elif self.inputDriverN1.currentText() == "경남":
            return "20"
        elif self.inputDriverN1.currentText() == "제주":
            return "21"
        elif self.inputDriverN1.currentText()=="대구":
            return "22"
        elif self.inputDriverN1.currentText() == "인천":
            return "23"
        elif self.inputDriverN1.currentText() == "대전":
            return "25"
        elif self.inputDriverN1.currentText() == "울산":
            return "26"
        else:
            return "11"


    #면허 인증하기 눌렀을 때
    def clickConfirmBtn(self):
        self.n1 =self.selectN1()
        self.driveNum=self.n1+"-"+self.inputDriverN2.text().strip()+"-"+self.inputDriverN3.text().strip()+"-"+self.inputDriverN4.text().strip()
        print(self.driveNum)

        #운전면허비어있으면 show 안됨
        if self.inputDriverN2.text()=="" or self.inputDriverN3.text()=="" or self.inputDriverN4.text()=="":
            msg = QMessageBox()
            msg.setFont(QtGui.QFont("나눔스퀘어", 10))
            msg.setWindowTitle("상태!")
            msg.setText("운전면허번호를 입력하세요")
            msg.setIcon(QMessageBox.Warning)
            msg.setStandardButtons(QMessageBox.Ok)
            x = msg.exec_()

        else:
            # 이름 생일 면허번호
            self.cdn = check_driveNum(self.inputName.text().strip(), self.inputBirth.text().strip(), self.driveNum)
            self.cdn.show()

    #인서트문
    def insertInfo(self):
        #아이디가 중복이면 안됨 / 비밀번호가 공백이 아니면서 같아야함 / 이메일 인증이 되었어야함 / 생년월일 다 적혀있어야함 / 운전면허 인증 ㅇㅋ
        
        if self.checkD.resultL.text()=="사용 가능한 아이디입니다.":
            if self.warningPw.text()=="비밀번호가 일치합니다." and self.inputPass.text()!="" and self.passCk_input.text()!="":
                if not self.inputName.text()=="":
                    if self.mess=="인증되었습니다.":
                        if not self.inputBirth.text()=="":
                            if self.cdn.same_answer ==True and self.cdn.exist_answer==True and self.cdn.valid_answer==True:
                                my_db = pymysql.connect(user="bb", passwd="1201", host="127.0.0.1", db="boongboong")
                                cursor = my_db.cursor()
                                insert_sql = "INSERT INTO user(userid,passwd,name,email,birth,drivenum)" \
                                                "VALUES (%s,%s,%s,%s,%s,%s)"

                                self.uBirthday = self.inputBirth.text()
                                self.birth_year = int(self.uBirthday[0:4])
                                self.birth_month = int(self.uBirthday[4:6])
                                self.birth_date = int(self.uBirthday[6:])

                                # 생일이 date로 저장되어있기 때문에 full_birth에 저장하여 인서트
                                self.full_birth = datetime.date(self.birth_year, self.birth_month, self.birth_date)
                                cursor.execute(insert_sql,(self.inputID.text().strip(), self.inputPass.text().strip(),
                                                        self.inputName.text().strip(),self.email,self.full_birth,self.driveNum))
                                my_db.commit()

                                self.success_widget = QWidget()
                                self.success_widget.setFont(QtGui.QFont("나눔스퀘어", 12))
                                self.success_widget.setFixedSize(301, 131)

                                self.okayLabel = QLabel("정상적으로 회원가입 되었습니다.", self.success_widget)
                                self.okayLabel.setGeometry(20, 40, 261, 20)

                                self.okBtn = QPushButton("확인", self.success_widget)
                                self.okBtn.setGeometry(100, 80, 91, 31)
                                self.okBtn.clicked.connect(self.goLogin2)

                                self.success_widget.show()


        if not self.checkD.resultL.text() =="사용 가능한 아이디입니다.":
            self.resultMessageBox("아이디를 확인해주세요!")

        elif self.warningPw.text()!="비밀번호가 일치합니다." or self.inputPass.text()=="" or self.passCk_input.text()=="":
            self.resultMessageBox("비밀번호를 확인해주세요!")

        if self.inputID.text()=="" or self.inputBirth.text()=="" or self.inputName.text()=="" :
            self.resultMessageBox("입력되지 않은 정보가 있습니다.")

    def resultMessageBox(self,message):
        msg = QMessageBox()
        msg.setFont(QtGui.QFont("나눔스퀘어", 10))
        msg.setWindowTitle("확인")
        msg.setText(message)
        msg.setIcon(QMessageBox.Warning)
        msg.setStandardButtons(QMessageBox.Ok)
        x = msg.exec_()

    def goLogin1(self):
        self.close()
        self.parent.show()

    def goLogin2(self):
        self.success_widget.close()
        self.close()
        self.parent.show()

# if __name__ == "__main__":
#     app = QApplication(sys.argv)
#     w = signWindow()
#     sys.exit(app.exec_())